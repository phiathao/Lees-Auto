{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/dataManage.js","redux/reducers/newCustomerReducer.js","redux/reducers/viewCustomerReducer.js","redux/reducers/customerVehiclesReducer.js","redux/reducers/newVehicleReducer.js","redux/reducers/vehicleReducer.js","redux/reducers/vehicleReceiptsReducer.js","redux/reducers/newReceiptReducer.js","redux/reducers/featureServiceReducer.js","redux/reducers/servicesReducer.js","redux/reducers/viewReceipt.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/fetchDataSaga.js","redux/sagas/deleteDataSaga.js","redux/sagas/addDataSaga.js","redux/sagas/updateDataSaga.js","redux/sagas/index.js","components/LogOutButton/LogOutButton.js","components/Header/Header.js","components/Footer/Footer.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/Styles/Styles.js","components/Services/Services.js","components/HomePage/HomePage.js","components/ManagePage/ManagePage.js","components/ManagePage/AddCustomer/AddCustomer.js","components/ManagePage/Customer/CustomerVehicle/Vehicle.js","components/ManagePage/Customer/Customer.js","components/ManagePage/Customer/CustomerVehicle/AddVehicle/AddVehicle.js","components/ManagePage/Customer/CustomerVehicle/VehicleReceipts/Receipts.js","components/ManagePage/Customer/CustomerVehicle/VehicleReceipts/VehicleReceipts.js","components/ManagePage/Customer/CustomerVehicle/VehicleReceipts/AddReceipts/ServiceAdd.js","components/ManagePage/Customer/CustomerVehicle/VehicleReceipts/AddReceipts/ServiceSubtract.js","components/ManagePage/Customer/CustomerVehicle/VehicleReceipts/AddReceipts/AddReceipt.js","components/ServicesAll/ServicesAll.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","dataInfo","emptyState","first_name","last_name","phone","street","city","zip","newCustomerReducer","viewCustomerReducer","customerVehiclesReducer","make","model","year","plate","color","other","customer_id","newVehicleReducer","vehicleReceiptsReducer","vehicle_id","payment_method","description","due","newReceiptReducer","featureServicesReducer","servicesReducer","viewReceiptReducer","view_id","view_list","Object","objectSpread","rootReducer","errors","user","featureService","services","dataManage","newCustomer","viewCustomer","customerVehicles","newVehicle","viewVehicle","vehicleReceipts","newReceipt","viewReceipt","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","console","log","response","status","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","fetchFeature","fetchData","fetchDataCustomer","fetchDataVehicle","fetchDataReceipts","fetchService","fetchDataSagaWatcher","setFeature","fetchDataSaga_marked","setData","fetchDataSaga_marked2","setDataCustomer","setDataCustomerVehicles","concat","fetchDataSaga_marked3","setDataVehicle","setDataVehicleReceipts","_context4","_marked4","setDataReceipts","_context5","receipt_id","_marked5","setService","_context6","_marked6","_context7","_marked7","deleteDataCustomer","deleteDataVehicle","deleteDataReceipt","deleteDataSagaWatcher","delete","deleteDataSaga_marked","deleteDataSaga_marked2","deleteDataSaga_marked3","deleteDataSaga_marked4","addDataCustomer","addDataVehicle","addDataSagaWatcher","addDataSaga_marked","addDataSaga_marked2","addDataSaga_marked3","updateDataCustomer","updateDataVehicle","id","updateDataSaga_marked","updateDataSaga_marked2","updateDataSaga_marked3","rootSaga","all","fetchDataSaga","deleteDataSaga","addDataSaga","updateDataSaga","sagas_marked","connect","props","react_default","createElement","className","onClick","dispatch","Header","Fragment","Link","to","components_LogOutButton_LogOutButton","username","React","Component","Footer","LoginPage","password","login","event","preventDefault","_this","history","push","handleInputChangeFor","propertyName","setState","defineProperty","target","value","role","onSubmit","htmlFor","name","onChange","Button_default","variant","RegisterPage","_this2","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","Styles","emptyButton","borderStyle","componentContainer","margin","width","componentMaxWidth","marginLeft","marginRight","noPadding","padding","componentHeader","textAlign","backgroundColor","paddingTop","paddingBottom","overflow","borderBottom","headerButtonLeft","display","position","float","left","marginTop","componentSecond","componentSecondBtn","gridLeftBtn","searchField","marginBottom","boxFormContainer","boxFormMaxWidth","maxWidth","minWidth","boxFormAdd","boxFormTwo","paddingLeft","paddingRight","boxFormOne","boxFormThreeFive","boxFormTwoFive","boxFormOneFive","boxFormBtn","addForm","boxContainer","stickLeft","inputMargin","borderWidth","boxContainerHeading","boxStickRight","cardContainer","minHeight","serviceItem","serviceP","serviceButton","homeCard","height","Services","componentDidMount","classes","reduxState","service_type","withStyles","HomePage","components_Services_Services","lib_default","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","Card_default","Manage","handleView","personId","handleDelete","vehicleId","window","confirm","dataList","map","item","i","TableRow_default","key","TableCell_default","Grid_default","container","spacing","xs","TextField_default","label","Paper_default","Table_default","TableHead_default","TableBody_default","AddCustomer","handleSubmit","alert","handleChange","toUpperCase","handleFill","inputProps","maxLength","Vehicle","vehicle","CardContent_default","Customer","edit","handleEdit","handleCancel","handleAddVehicle","editMode","CustomerVehicle_Vehicle","AddVehicle","Receipt","receiptId","receipt","viewThisReceipt","date","VehicleReceipts","handleAddReceipt","Receipts","ServiceAdd","service_id","alignItems","Fab_default","size","aria-label","add","select","service","MenuItem_default","ServiceSubtract","subtract","AddReceipt","numberService","handleAddService","handleSubtractService","inputService","AddReceipts_ServiceAdd","AddReceipts_ServiceSubtract","ServicesPage","allService","App","HashRouter","components_Header_Header","Switch","Redirect","exact","from","path","components_ProtectedRoute_ProtectedRoute","ManagePage","ManageCustomerPage","ManageVehicle","ManageAddVehicle","ManageAddReceipt","ManageAddCustomer","render","components_Footer_Footer","theme","createMuiTheme","palette","primary","main","secondary","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","styles","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.aa1a8af8.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const dataInfo = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_DATA':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default dataInfo;","const emptyState = {\n  first_name: '',\n  last_name: '',\n  phone: '',\n  street: '',\n  city: '',\n  zip: '',\n  state: '',\n}\n\nconst newCustomerReducer = (state = emptyState, action) => {\n  switch (action.type) {\n    case 'SET_NEW_CUSTOMER':\n      return action.payload;\n    case 'CLEAR_NEW_CUSTOMER':\n      return emptyState;\n    default:\n      return state;\n  }\n};\n\nexport default newCustomerReducer;\n","const viewCustomerReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_VIEW_CUSTOMER':\n      return action.payload;\n    case 'EDIT_CUSTOMER':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default viewCustomerReducer;\n","const customerVehiclesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_CUSTOMER_VEHICLES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default customerVehiclesReducer;\n","const emptyState = {\n  make: '',\n  model: '',\n  year: '',\n  plate: '',\n  color: '',\n  other: '',\n  customer_id: '',\n}\n\nconst newVehicleReducer = (state = emptyState, action) => {\n  switch (action.type) {\n    case 'SET_NEW_VEHICLE':\n      return action.payload;\n    case 'CLEAR_NEW_VEHICLE':\n      return emptyState;\n    default:\n      return state;\n  }\n};\n\nexport default newVehicleReducer;\n","const viewCustomerReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_VIEW_VEHICLE':\n      return action.payload;\n    case 'EDIT_VEHICLE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default viewCustomerReducer;\n","const vehicleReceiptsReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_VEHICLE_RECEIPTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default vehicleReceiptsReducer;\n","const emptyState = {\n  vehicle_id: '',\n  payment_method: '',\n  description: '',\n  due: '',\n}\n\nconst newReceiptReducer = (state = emptyState, action) => {\n  switch (action.type) {\n    case 'SET_NEW_RECEIPT':\n      return action.payload;\n    case 'CLEAR_NEW_RECEIPT':\n      return emptyState;\n    default:\n      return state;\n  }\n};\n\nexport default newReceiptReducer;\n","const featureServicesReducer = (state = {}, action) => {\n    switch (action.type) {\n      case 'SET_FEATURE':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  export default featureServicesReducer;","const servicesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_SERVICES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default servicesReducer;\n","const viewReceiptReducer = (\n  state = {\n    view_id: '',\n    view_list: [],\n  }, \n  action\n) => {\n  switch (action.type) {\n    case 'SET_VIEW_RECEIPT':\n      return { ...state, view_list: action.payload };\n    case 'SET_VIEW_RECEIPT_ID':\n      return { ...state, view_id: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default viewReceiptReducer;\n","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport dataManage from './dataManage';\nimport newCustomer from './newCustomerReducer';\nimport viewCustomer from './viewCustomerReducer';\nimport customerVehicles from './customerVehiclesReducer';\nimport newVehicle from './newVehicleReducer';\nimport viewVehicle from './vehicleReducer';\nimport vehicleReceipts from './vehicleReceiptsReducer';\nimport newReceipt from './newReceiptReducer';\nimport featureService from './featureServiceReducer';\nimport services from './servicesReducer';\nimport viewReceipt from './viewReceipt';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  featureService, //\n  services, // \n  dataManage, // admin handle customers, vehicles, and receipts information\n  newCustomer, // admin adding customer\n  viewCustomer, // admin who to view\n  customerVehicles, // customer vehicles\n  newVehicle, // adding new vehicle to customer\n  viewVehicle, // viewing the vehicle\n  vehicleReceipts, // vehicle receipts\n  newReceipt, // adding vehicle a receipt\n  viewReceipt,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* fetchFeature() { // getting customers and vehicles\n  try {\n    const setFeature = yield axios.get('/api/public/feature');\n    yield put({type: 'SET_FEATURE', payload: setFeature.data[0]})\n  } catch (error) {\n      console.log('Error with fetching feature:', error);\n  }\n}\n\nfunction* fetchData() { // getting customers and vehicles\n  try {\n    const setData = yield axios.get('/api/manage');\n    yield put({type: 'SET_DATA', payload: setData.data})\n  } catch (error) {\n      console.log('Error with fetching data:', error);\n  }\n}\n\nfunction* fetchDataCustomer(action){\n  try {\n    const setDataCustomer = yield axios.get(`/api/manage/get/customer/${action.payload}`); // get customer info\n    const setDataCustomerVehicles = yield axios.get(`/api/manage/get/customer/${action.payload}/vehicles`); // get customer cars\n    yield put({type: 'SET_VIEW_CUSTOMER', payload: setDataCustomer.data[0]}); // store customer info\n    yield put({type: 'SET_CUSTOMER_VEHICLES', payload: setDataCustomerVehicles.data}); // store customer vehicle\n  } catch (error) {\n      console.log('Error with fetching customer:', error);\n  }\n}\n\nfunction* fetchDataVehicle(action){\n  try {\n    const setDataVehicle = yield axios.get(`/api/manage/get/vehicle/${action.payload}`); // get vehicle by id\n    const setDataVehicleReceipts = yield axios.get(`/api/manage/get/vehicle/${action.payload}/receipts`); // get vehicle receipts\n    yield put({type: 'SET_VIEW_VEHICLE', payload: setDataVehicle.data[0]}); // store vehicle info\n    yield put({type: 'SET_VEHICLE_RECEIPTS', payload: setDataVehicleReceipts.data}); // store vehicle receipts    \n  } catch (error) {\n      console.log('Error with fetching vehicle:', error);\n  }\n}\n\nfunction* fetchDataReceipts(action){\n  try {\n    const setDataReceipts = yield axios.get(`/api/manage/get/receipt/${action.payload}`); // get receipts by id\n    yield put({type: 'SET_VIEW_RECEIPT', payload: setDataReceipts.data}); // store receipts info\n    yield put({type: 'SET_VIEW_RECEIPT_ID', payload: setDataReceipts.data[0].receipt_id}); // store receipts info\n  } catch (error) {\n      console.log('Error with fetching receipts:', error);\n  }\n}\n\nfunction* fetchService(){\n  try {\n    const setService = yield axios.get(`/api/public/services`); // get services\n    yield put({type: 'SET_SERVICES', payload: setService.data}); // store services info\n  } catch (error) {\n      console.log('Error with fetching service:', error);\n  }\n}\n\n\nfunction* fetchDataSagaWatcher() {\n  yield takeLatest('FETCH_FEATURE', fetchFeature);\n  yield takeLatest('FETCH_DATA', fetchData);\n  yield takeLatest('FETCH_DATA_CUSTOMER', fetchDataCustomer);\n  yield takeLatest('FETCH_DATA_VEHICLE', fetchDataVehicle);\n  yield takeLatest('FETCH_DATA_RECEIPT', fetchDataReceipts)\n  yield takeLatest('FETCH_SERVICES', fetchService)\n\n\n}\n\nexport default fetchDataSagaWatcher;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* deleteDataCustomer(action) {\n  try {\n    yield axios.delete(`/api/manage/delete/customer/${action.payload}`)\n    yield put({type: 'FETCH_DATA'})\n  } catch (error) {\n      console.log('Error with delete customer:', error);\n  }\n}\n\nfunction* deleteDataVehicle(action) {\n  try {\n    yield axios.delete(`/api/manage/delete/vehicle/${action.payload}`);\n    yield put({type: 'FETCH_DATA'});\n  } catch (error) {\n      console.log('Error with delete vehicle:', error);\n  }\n}\n\nfunction* deleteDataReceipt(action) {\n  try {\n    yield axios.delete(`/api/manage/delete/receipt/${action.payload}`);\n    // yield put({type: 'FETCH_DATA_VEHICLE', payload: action.payload});\n  } catch (error) {\n      console.log('Error with delete receipt:', error);\n  }\n}\n\nfunction* deleteDataSagaWatcher() { // listen to what to delete\n  yield takeLatest('DELETE_CUSTOMER', deleteDataCustomer);\n  yield takeLatest('DELETE_VEHICLE', deleteDataVehicle);\n  yield takeLatest('DELETE_RECEIPT', deleteDataReceipt);\n}\n\nexport default deleteDataSagaWatcher;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* addDataCustomer(action) {\n  try {\n    yield axios.post(`/api/manage/add/customer/`, action.payload);\n    yield put({type: 'CLEAR_NEW_CUSTOMER'});\n    yield put({type: 'FETCH_DATA'});\n  } catch (error) {\n      console.log('Error with adding customer:', error);\n  }\n}\n\nfunction* addDataVehicle(action) {\n  try {\n    yield axios.post(`/api/manage/add/vehicle/`, action.payload);\n    yield put({type: 'CLEAR_NEW_VEHICLE'});\n    yield put({type: 'FETCH_DATA_CUSTOMER', payload: action.payload.customer_id}); // refresh customer info after redirect\n    yield put({type: 'FETCH_DATA'});\n  } catch (error) {\n      console.log('Error with adding vehicle:', error);\n  }\n}\n\nfunction* addDataSagaWatcher() { // listen to what to add\n  yield takeLatest('ADD_CUSTOMER', addDataCustomer);\n  yield takeLatest('ADD_VEHICLE', addDataVehicle);\n}\n\nexport default addDataSagaWatcher;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* updateDataCustomer(action) {\n  try {\n    yield axios.put(`/api/manage/put/customer/`, action.payload);\n    yield put({type: 'FETCH_DATA'});\n    yield put({type: 'FETCH_DATA_CUSTOMER', payload: action.payload.id});\n  } catch (error) {\n      console.log('Error with updating customer:', error);\n  }\n}\nfunction* updateDataVehicle(action) {\n  try {\n    yield axios.put(`/api/manage/put/vehicle/`, action.payload);\n    yield put({type: 'FETCH_DATA'});\n    yield put({type: 'FETCH_DATA_CUSTOMER', payload: action.payload.customer_id});\n  } catch (error) {\n      console.log('Error with updating vehicle:', error);\n  }\n}\n\nfunction* addDataSagaWatcher() { // listen to what to add\n  yield takeLatest('UPDATE_CUSTOMER', updateDataCustomer);\n  yield takeLatest('UPDATE_VEHICLE', updateDataVehicle);\n}\n\nexport default addDataSagaWatcher;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport fetchDataSaga from './fetchDataSaga';\nimport deleteDataSaga from './deleteDataSaga';\nimport addDataSaga from './addDataSaga';\nimport updateDataSaga from './updateDataSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    fetchDataSaga(),\n    deleteDataSaga(),\n    addDataSaga(),\n    updateDataSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\n// import LoginButton from '../LoginButton/LoginButton';\nimport './Header.css';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header\">\n        {/* <Link to=\"/home\" className=\"header-title\">\n          <h2>Lee's Auto Shop &amp; Repair</h2>\n        </Link> */}\n        {/* <Link className=\"nav-link\" to=\"/home\">\n          Home\n        </Link> */}\n        {/* Always show this link since the about page is not protected */}\n        {/* <Link className=\"nav-link\" to=\"/services\">\n          Services\n        </Link> */}\n        {/* <Link className=\"nav-link\" to=\"/carList\">\n          Car List\n        </Link> */}\n        {/* Show the link to the info page and the logout button if the user is logged in */}\n        {this.props.user.id && (\n          <>\n            <Link className=\"nav-link\" to=\"/manage\">\n              Manage\n            </Link>\n            {/* <Link className=\"nav-link\" to=\"/shopService\">\n              Shop Services\n            </Link>\n            <Link className=\"nav-link\" to=\"/carSales\">\n              Car Sales\n            </Link> */}\n          </>\n        )}\n        {/* Show this link if they are logged in or not,\n        but call this link 'Home' if they are logged in,\n        and call this link 'Login / Register' if they are not */}\n          {this.props.user.id ? <LogOutButton className=\"float-right nav-link\" /> : <Link className=\"float-right nav-link\" to=\"/login\">Login</Link>}\n          {this.props.user.id && (\n          <span className=\"float-right nav-login\">Welcome back, {this.props.user.username}!\n          </span>\n        )}\n      </div>\n    )\n  }\n}\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <div className=\"footer-content\">\n      <div className=\"footer-left\">\n        <p>Address: 2032 S 17th St, Sheboygan, WI 53081</p>\n        <p>Phone: 555-555-5555\n    Monday-Friday 8AM-5PM</p>\n        <p>&copy; PHIA THAO</p>\n      </div>\n      {/* <div className=\"footer-right\">\n        Direction\n      </div> */}\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n      this.props.history.push('/manage'); // redirect if successful\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form onSubmit={this.login}>\n          <h1>Login</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <Button\n              // className=\"log-in\"\n              color=\"secondary\"\n              variant=\"contained\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            >Log In</Button>\n          </div>\n        </form>\n        <center>\n          {/* <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n          >\n            Register\n          </button> */}\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","const Styles = {\n    emptyButton: {\n        borderStyle: \"none\",\n        color: \"white\",\n    },\n    componentContainer: {\n        margin: 0,\n        width: \"100%\",\n    },\n    componentMaxWidth: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        width: \"600px\",\n    },\n    noPadding: {\n        padding: 0,\n    },\n    componentHeader: {\n        width: \"100%\",\n        textAlign: \"center\",\n        backgroundColor: \"#6a7b83\",\n        margin: 0,\n        paddingTop: \"30px\",\n        paddingBottom: \"30px\",\n        overflow: \"hidden\",\n        color: \"#f2f2f2\",\n        borderBottom: \"3px solid #2196f3\",\n    },\n    headerButtonLeft: {\n        display: \"block\",\n        margin: \"auto\",\n        position: \"absolute\",\n        float: \"left\",\n        left: \"5%\",\n        marginTop: \"12px\",\n    },\n    componentSecond: {\n        paddingTop: \"15px\",\n        textAlign: \"center\",\n        margin: \"auto\",\n    },\n    componentSecondBtn: {\n        display: \"block\",\n        margin: \"auto\",\n        width: \"150px\",\n    },\n    gridLeftBtn: {\n        width: \"100%\",\n    },\n    searchField: {\n        width: \"40%\",\n        marginBottom: 0,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        backgroundColor: \"#f2f2f2\",\n    },\n    boxFormContainer: {\n        textAlign: \"center\",\n        marginTop: \"30px\",\n    },\n    boxFormMaxWidth: {\n        maxWidth: \"55%\",\n        minWidth: \"540px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n    },\n    boxFormAdd: {\n        display: \"inline\",\n    },\n    boxFormTwo: {\n        paddingLeft: \"1%\",\n        paddingRight: \"1%\",\n        minWidth: \"48%\",\n        marginBottom: 0,\n        marginTop: 0,\n    },\n    boxFormOne: {\n        paddingLeft: \"1%\",\n        paddingRight: \"1%\",\n        minWidth: \"98%\",\n        marginBottom: 0,\n        marginTop: 0,\n    },\n    boxFormThreeFive: {\n        paddingLeft: \"1%\",\n        paddingRight: \"1%\",\n        width: \"40%\",\n        marginBottom: 0,\n        marginTop: 0,\n    },\n    boxFormTwoFive: {\n        paddingLeft: \"1%\",\n        paddingRight: \"1%\",\n        width: \"30%\",\n        marginBottom: 0,\n        marginTop: 0,\n    },\n    boxFormOneFive: {\n        paddingLeft: \"1%\",\n        paddingRight: \"1%\",\n        width: \"24%\",\n        marginBottom: 0,\n        marginTop: 0,\n    },\n    boxFormBtn: {\n        width: \"520px\",\n        margin: \"auto\",\n    },\n    addForm: {\n        paddingTop: \"30px\",\n        paddingBottom: \"30px\",\n    },\n    boxContainer: {\n        textAlign: \"center\",\n        width: \"520px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: \"15px\",\n        marginBottom: \"15px\",\n    },\n    stickLeft: {\n        textAlign: \"left\",\n    },\n    inputMargin: {\n        margin: 0,\n        marginBottom: 0,\n        padding: 0,\n        borderWidth: 0,\n        backgroundColor: \"#cfd8dc\",\n    },\n    boxContainerHeading: {\n        marginTop: 0,\n        marginBottom: 0,\n    },\n    boxStickRight: {\n        float: \"right\",\n        // marginBottom: \"-17px\",\n    },\n    cardContainer: {\n        minHeight: \"100px\",\n        maxWidth: \"600px\",\n        margin: \"auto\",\n        marginTop: \"10px\",\n    },\n    serviceItem: {\n        textAlign: \"center\",\n        backgroundColor: \"#6a7b83\",\n        margin: \"0\",\n        color: \"white\",\n        overflow: \"hidden\",\n        paddingBottom: \"30px\",\n        paddingTop: \"30px\",\n        borderBottom: \"#2196f3 solid 3px\",\n        minHeight: \"500px\",\n    },\n    serviceP: {\n        width: \"90%\",\n        margin: \"auto\",\n    },\n    serviceButton: {\n        margin: \"15px\",\n    },\n    homeCard: {\n        height: \"200px\",\n        margin: \"10px\",\n    }\n}\n\nexport default Styles;","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Styles from '../Styles/Styles';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Services extends React.Component {\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'FETCH_FEATURE'});\n    }\n    render() {\n        return (\n            <div className={this.props.classes.serviceItem}>\n                <h3>{this.props.reduxState.featureService.service_type}</h3>\n                <p className={this.props.classes.serviceP}>{this.props.reduxState.featureService.description}</p>\n                <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.serviceButton} component={Link} to=\"/services\">other services</Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nexport default connect(mapStateToProps)(withStyles(Styles)(Services));","import React from 'react';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\nimport \"./HomePage.css\";\nimport Card from '@material-ui/core/Card';\nimport Services from '../Services/Services';\n\n\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\n\n\nclass HomePage extends React.Component {\n  render() {\n    let setting = {\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      autoplay: true,\n      autoplaySpeed: 2000,\n    }\n    return (\n      <div>\n        <Services />\n        <Slider {...setting}>\n          <div>\n            <Card className=\"home-card\">1</Card>\n          </div>\n          <div>\n            <Card className=\"home-card\">2</Card>\n          </div>\n          <div>\n            <Card className=\"home-card\">3</Card>\n          </div>\n          <div>\n            <Card className=\"home-card\">4</Card>\n          </div>\n          <div>\n            <Card className=\"home-card\">5</Card>\n          </div>\n          <div>\n            <Card className=\"home-card\">6</Card>\n          </div>\n        </Slider>\n      </div>\n    )\n  }\n}\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(HomePage);\n","import React from 'react';\nimport './ManagePage.css';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport Styles from '../Styles/Styles';\n\nclass Manage extends React.Component {\n  componentDidMount = () => {\n    this.props.dispatch({\n      type: 'FETCH_DATA'\n    })\n  }\n  handleView = (personId) => { // view base on the customer\n    console.log(personId);\n    this.props.dispatch({\n      type: 'FETCH_DATA_CUSTOMER',\n      payload: personId\n    })\n    this.props.history.push(`/manage/customer`);\n  }\n  handleDelete = (vehicleId, personId) => {\n    if (vehicleId === null) { // if customer don't have a vehicle under them // remove customer\n      if (window.confirm('Delete Customer?')) {\n        this.props.dispatch({\n          type: 'DELETE_CUSTOMER',\n          payload: personId\n        });\n      }\n    } else { // if customer have vehicle vehicle under them // only remove vehicle\n      if (window.confirm('Delete Vehicle?')) {\n        this.props.dispatch({\n          type: 'DELETE_VEHICLE',\n          payload: vehicleId\n        });\n      }\n    }\n  }\n  render() {\n    // map data receive and put into table\n    let dataList = this.props.reduxState.dataManage.map((item, i) => {\n      return (\n        <TableRow key={i}>\n          {item.vehicle_id ? <TableCell>{item.make} {item.model}</TableCell> : <TableCell>No Vehicle</TableCell>}\n          <TableCell>{item.first_name}</TableCell>\n          <TableCell>{item.last_name}</TableCell>\n          <TableCell><Button variant='contained' color='primary' onClick={() => this.handleView(item.id)}>View</Button></TableCell>\n          <TableCell><Button variant='contained' color='primary' onClick={() => this.handleDelete(item.vehicle_id, item.id)}>Remove</Button></TableCell>\n        </TableRow>\n      )\n    }\n    ) // end of map\n    return (\n      <Grid container spacing={24} className={this.props.classes.componentContainer}>\n        <Grid item xs={12} className={this.props.classes.componentHeader}>\n          <h3>Manage Customers and Vehicles</h3>\n        </Grid>\n        <Grid item container xs={12}>\n          <Button className={this.props.classes.componentSecondBtn} variant='contained' color='secondary' component={Link} to='/manage/add'>Add Customer</Button>\n        </Grid>\n        <Grid item container xs={12}>\n        <TextField\n            id=\"filled-search\"\n            label=\"Search\"\n            type=\"search\"\n            className={this.props.classes.searchField}\n            margin=\"normal\"\n            variant=\"filled\"\n          />\n        </Grid>\n        {/* <Grid container xs={24}>\n                <Grid item xs={12} className=\"component-header\">\n                    <Button variant=\"contained\" color=\"secondary\" className=\"button-return-left\" component={Link} to=\"/manage\">Back to Manage</Button>\n                    <h3>View Customer</h3>\n                </Grid>\n                {editMode}\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => this.handleAddVehicle(this.props.reduxState.viewCustomer.id)}>Add Vehicle</Button>\n                {customerVehicles}\n            </Grid> */}\n        {/* table */}\n        <Grid item xs={12} className={this.props.classes.noPadding}>\n          <Paper>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Vehicle</TableCell>\n                  <TableCell>First Name</TableCell>\n                  <TableCell>Last Name</TableCell>\n                  <TableCell>Customer Information</TableCell>\n                  <TableCell>Remove</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {dataList}\n              </TableBody>\n            </Table>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  }\n};\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nexport default connect(mapStateToProps)(withStyles(Styles)(Manage));\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport '../ManagePage.css';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core';\nimport Styles from '../../Styles/Styles';\n\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nclass AddCustomer extends React.Component {\n  handleSubmit = () => {\n    if (this.props.reduxState.newCustomer.first_name !== '') {\n      this.props.dispatch({\n        type: 'ADD_CUSTOMER',\n        payload: this.props.reduxState.newCustomer\n      }); // add some type of confirmation or notification that customer is added\n      alert(this.props.reduxState.newCustomer.first_name + ' added');\n      this.props.history.push('/manage');\n    } else {\n      alert('not a valid customer');\n    }\n  }\n  handleChange = (propertyName) => (event) => {\n    if (propertyName === 'state') {\n      this.props.dispatch({\n        type: 'SET_NEW_CUSTOMER',\n        payload: { ...this.props.reduxState.newCustomer, [propertyName]: event.target.value.toUpperCase() }\n      })\n    } else {\n      this.props.dispatch({\n        type: 'SET_NEW_CUSTOMER',\n        payload: { ...this.props.reduxState.newCustomer, [propertyName]: event.target.value }\n      })\n    }\n  }\n  // handleFill remove after demo\n  handleFill = () => {\n    this.props.dispatch({\n      type: 'SET_NEW_CUSTOMER',\n      payload: { ...this.props.reduxState.newCustomer,\n        first_name: 'John',\n        last_name: 'Three',\n        phone: '9204497000',\n        street: '1332 N 15th St',\n        city: 'Sheboygan',\n        zip: '53081',\n        state: 'WI'\n      }\n    })\n  } // remove after demo\n  render() {\n    return (\n      <Grid container spacing={24} className={this.props.classes.componentContainer}>\n        <Grid item xs={12} className={this.props.classes.componentHeader}>\n          <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.headerButtonLeft} component={Link} to=\"/manage\">Back to Manage</Button>\n          <h3>Add Customer</h3>\n        </Grid>\n        <Grid item container xs={12} spacing={24} className={this.props.classes.boxFormContainer}>\n        <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <TextField\n              label=\"First Name\"\n              type=\"search\"\n              className={this.props.classes.boxFormTwo}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newCustomer.first_name}\n              onChange={this.handleChange('first_name')}\n            />\n            <TextField\n              label=\"Last Name\"\n              type=\"search\"\n              className={this.props.classes.boxFormTwo}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newCustomer.last_name}\n              onChange={this.handleChange('last_name')}\n            />\n          </Grid>\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <TextField\n              label=\"Phone Number\"\n              type=\"search\"\n              className={this.props.classes.boxFormOne}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newCustomer.phone}\n              onChange={this.handleChange('phone')}\n              inputProps={{\n                maxLength: 10,\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <TextField\n              label=\"Street Address\"\n              type=\"search\"\n              className={this.props.classes.boxFormOne}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newCustomer.street}\n              onChange={this.handleChange('street')}\n            />\n          </Grid>\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <TextField\n              label=\"City\"\n              type=\"search\"\n              className={this.props.classes.boxFormThreeFive}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newCustomer.city}\n              onChange={this.handleChange('city')}\n            />\n            <TextField\n              label=\"Zip Code\"\n              type=\"text\"\n              className={this.props.classes.boxFormTwoFive}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newCustomer.zip}\n              onChange={this.handleChange('zip')}\n              inputProps={{\n                maxLength: 5,\n              }}\n            />\n            <TextField\n              label=\"State\"\n              type=\"text\"\n              className={this.props.classes.boxFormOneFive}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newCustomer.state}\n              onChange={this.handleChange('state')}\n              inputProps={{\n                maxLength: 2,\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.boxFormOne} onClick={this.handleSubmit}>Submit</Button>\n            <button className={this.props.classes.emptyButton} onClick={this.handleFill}>FILL</button>\n            {/* button remove after demo */}\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nexport default connect(mapStateToProps)(withStyles(Styles)(AddCustomer));\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Styles from '../../../Styles/Styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nclass Vehicle extends React.Component {\n    handleDelete = (vehicleId) => {\n        if (window.confirm('Delete Vehicle?')) {\n            this.props.dispatch({\n                type: 'DELETE_VEHICLE',\n                payload: vehicleId\n            });\n            this.props.dispatch({\n                type: 'FETCH_DATA_CUSTOMER',\n                payload: this.props.reduxState.viewCustomer.id\n            });\n        }\n    }\n    handleView = () => {\n        this.props.dispatch({\n            type: 'FETCH_DATA_VEHICLE',\n            payload: this.props.vehicle.id\n        });\n    }\n    render() {\n        return (\n            <Card className={this.props.classes.cardContainer}>\n                <Grid container spacing={24}>\n                    <Grid item xs={9}>\n                    <CardContent>\n                        <h4>{this.props.vehicle.year} {this.props.vehicle.make} {this.props.vehicle.model}</h4>\n                    </CardContent>\n                    </Grid>\n                    <Grid item xs={3}>\n                    <CardContent>\n                        <Button className={this.props.classes.gridLeftBtn} variant=\"contained\" color=\"secondary\" onClick={this.handleView} component={Link} to=\"/manage/vehicle\">view</Button>\n                        <Button className={this.props.classes.gridLeftBtn} variant=\"contained\" color=\"secondary\" onClick={() => this.handleDelete(this.props.vehicle.id)}>delete</Button>\n                    </CardContent>\n                    </Grid>\n                </Grid>\n            </Card>\n        )\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nexport default connect(mapStateToProps)(withStyles(Styles)(Vehicle));\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Vehicle from './CustomerVehicle/Vehicle';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Styles from '../../Styles/Styles';\n\nclass Customer extends React.Component {\n    state = {\n        edit: false\n    }\n    handleEdit = () => {\n        this.setState({\n            edit: true\n        })\n    }\n    handleCancel = () => {\n        this.setState({\n            edit: false\n        })\n        this.props.dispatch({\n            type: 'FETCH_DATA_CUSTOMER',\n            payload: this.props.reduxState.viewCustomer.id\n        })\n    }\n    handleSubmit = () => {\n        this.props.dispatch({\n            type: 'UPDATE_CUSTOMER',\n            payload: this.props.reduxState.viewCustomer\n        })\n        this.setState({\n            edit: false\n        })\n    }\n    handleChange = (propertyName) => (event) => {\n        this.props.dispatch({\n            type: 'EDIT_CUSTOMER',\n            payload: { ...this.props.reduxState.viewCustomer, [propertyName]: event.target.value }\n        })\n    }\n    handleAddVehicle = (id) => {\n        this.props.dispatch({\n            type: 'SET_NEW_VEHICLE',\n            payload: { ...this.props.reduxState.newVehicle, customer_id: id }\n        });\n        this.props.history.push('/manage/vehicle/add');\n    }\n    render() {\n        let editMode = this.state.edit ?\n            // in edit\n            <Grid item container spacing={24} className={this.props.classes.componentMaxWidth}>\n                <Grid item container spacing={24} className={this.props.classes.stickLeft}>\n                    <Grid item xs={9}>\n                        <h4>Name: <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewCustomer.first_name} onChange={this.handleChange('first_name')} /> <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewCustomer.last_name} onChange={this.handleChange('last_name')} /></h4>\n                        <h4>Phone: <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewCustomer.phone} onChange={this.handleChange('phone')} /></h4>\n                        <h4>Address: <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewCustomer.street} onChange={this.handleChange('street')} /> <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewCustomer.city} onChange={this.handleChange('city')} /> <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewCustomer.zip} onChange={this.handleChange('zip')} /> <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewCustomer.state} onChange={this.handleChange('state')} /></h4>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.gridLeftBtn} onClick={this.handleSubmit}>Save</Button>\n                        <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.gridLeftBtn} onClick={this.handleCancel}>Cancel</Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n            : // not in edit\n            <Grid item container spacing={24} className={this.props.classes.componentMaxWidth}>\n                <Grid item container spacing={24} className={this.props.classes.stickLeft}>\n                    <Grid item xs={9}>\n                        <h4>Name: {this.props.reduxState.viewCustomer.first_name} {this.props.reduxState.viewCustomer.last_name}</h4>\n                        <h4>Phone: {this.props.reduxState.viewCustomer.phone}</h4>\n                        <h4>Address: {this.props.reduxState.viewCustomer.street} {this.props.reduxState.viewCustomer.city} {this.props.reduxState.viewCustomer.zip} {this.props.reduxState.viewCustomer.state}</h4>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.gridLeftBtn} onClick={this.handleEdit}>Edit</Button>\n                    </Grid>\n                </Grid>\n            </Grid>;\n        let customerVehicles = this.props.reduxState.customerVehicles.map(vehicle => {\n            return <Vehicle vehicle={vehicle} key={vehicle.id} />\n        });\n        // <Card className=\"card-container\">\n        //     {JSON.stringify(this.props.reduxState.customerVehicles)}\n        // </Card>;\n        return this.props.reduxState.viewCustomer ?\n            <Grid container spacing={24} className={this.props.classes.componentContainer}>\n                <Grid item xs={12} className={this.props.classes.componentHeader}>\n                    <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.headerButtonLeft} component={Link} to=\"/manage\">Back to Manage</Button>\n                    <h3>View Customer</h3>\n                </Grid>\n                {editMode}\n                <Grid item xs={12}>\n                <Button className={this.props.classes.componentSecondBtn} variant=\"contained\" color=\"secondary\" onClick={() => this.handleAddVehicle(this.props.reduxState.viewCustomer.id)}>Add Vehicle</Button>\n                </Grid>\n                <Grid item xs={12}>\n                    {customerVehicles}\n                </Grid>\n            </Grid>\n            :\n            <Grid container spacing={24} className={this.props.classes.componentContainer}>\n                <Grid item xs={12} className={this.props.classes.componentHeader}>\n                    <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.headerButtonLeft} component={Link} to=\"/manage\">Back to Manage</Button>\n                    <h3>No customer selected</h3>\n                </Grid>\n            </Grid>\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nexport default connect(mapStateToProps)(withStyles(Styles)(Customer));\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n// import '../ManagePage.css';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core';\nimport Styles from '../../../../Styles/Styles';\nimport Grid from '@material-ui/core/Grid';\n\nclass AddVehicle extends React.Component {\n  handleSubmit = () => {\n    if (this.props.reduxState.newVehicle.make !== '' && this.props.reduxState.newVehicle.year !== '' && this.props.reduxState.newVehicle.model !== '') { // validate input\n      if (window.confirm(`Add ${this.props.reduxState.newVehicle.make} ${this.props.reduxState.newVehicle.model} to ${this.props.reduxState.viewCustomer.first_name}`)) {\n        this.props.dispatch({\n          type: 'ADD_VEHICLE',\n          payload: this.props.reduxState.newVehicle\n        }); // add some type of confirmation or notification that customer is added\n        alert(`Vehicle added to ${this.props.reduxState.viewCustomer.first_name}`);\n        this.props.history.push('/manage/customer');\n      }\n    } else {\n      alert('not a valid vehicle');\n    }\n  }\n  handleChange = (propertyName) => (event) => {\n      this.props.dispatch({\n        type: 'SET_NEW_VEHICLE',\n        payload: { ...this.props.reduxState.newVehicle, [propertyName]: event.target.value }\n      })\n  }\n  // handleFill remove after demo\n  handleFill = () => {\n    this.props.dispatch({\n      type: 'SET_NEW_VEHICLE',\n      payload: { ...this.props.reduxState.newVehicle,\n        make: 'Ford',\n        model: 'F-150',\n        year: '2011',\n        plate: 'NIJU-RE91',\n        color: 'White',\n        other: 'custom hood paint'\n      }\n    })\n  } // remove after demo\n  render() {\n    return this.props.reduxState.newVehicle.customer_id ?\n      <Grid container spacing={24} className={this.props.classes.componentContainer}>\n        <Grid item xs={12} className={this.props.classes.componentHeader}>\n          <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.headerButtonLeft} component={Link} to=\"/manage/customer\">Back to Customer</Button>\n          <h3>Add Vehicle</h3>\n        </Grid>\n        <Grid item container xs={12} spacing={24} className={this.props.classes.boxFormContainer}>\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <TextField\n              label=\"Make\"\n              type=\"text\"\n              className={this.props.classes.boxFormTwo}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newVehicle.make}\n              onChange={this.handleChange('make')}\n            />\n            <TextField\n              label=\"Model\"\n              type=\"text\"\n              className={this.props.classes.boxFormTwo}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newVehicle.model}\n              onChange={this.handleChange('model')}\n            />\n          </Grid>\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <TextField\n              label=\"Year\"\n              type=\"text\"\n              className={this.props.classes.boxFormOne}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newVehicle.year}\n              onChange={this.handleChange('year')}\n            />\n          </Grid>\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <TextField\n              label=\"Plate\"\n              type=\"text\"\n              className={this.props.classes.boxFormTwo}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newVehicle.plate}\n              onChange={this.handleChange('plate')}\n            />\n            <TextField\n              label=\"Color\"\n              type=\"text\"\n              className={this.props.classes.boxFormTwo}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newVehicle.color}\n              onChange={this.handleChange('color')}\n            />\n          </Grid>\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <TextField\n              label=\"Other\"\n              type=\"text\"\n              className={this.props.classes.boxFormOne}\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.props.reduxState.newVehicle.other}\n              onChange={this.handleChange('other')}\n            />\n          </Grid>\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.boxFormOne} onClick={this.handleSubmit}>Submit</Button>\n            <button className={this.props.classes.emptyButton} onClick={this.handleFill}>FILL</button>\n            {/* button remove after demo */}\n          </Grid>\n        </Grid>\n      </Grid>\n      :\n      <Grid className={this.props.classes.componentContainer}>\n        <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.headerButtonLeft} component={Link} to=\"/manage\">Back to Manage</Button>\n        <h3>No Customer Selected to Add Vehicle</h3>\n      </Grid>\n      ;\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nexport default connect(mapStateToProps)(withStyles(Styles)(AddVehicle));\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Styles from '../../../../Styles/Styles';\nimport Grid from '@material-ui/core/Grid';\n// import VehicleReceipts from './VehicleReceipts';\n\n\nclass Receipt extends React.Component {\n    handleDelete = (receiptId) => {\n        if (window.confirm('Delete Receipt?')) {\n            this.props.dispatch({\n                type: 'DELETE_RECEIPT',\n                payload: this.props.receipt.id\n            });\n            this.props.dispatch({\n                type: 'FETCH_DATA_VEHICLE',\n                payload: this.props.receipt.vehicle_id\n            });\n        }\n    }\n    handleView = () => {\n        this.props.dispatch({\n            type: 'FETCH_DATA_RECEIPT',\n            payload: this.props.receipt.id\n        });\n    }\n    render() {\n        let viewThisReceipt = this.props.reduxState.viewReceipt.view_id === this.props.receipt.id && (\n            <Grid item xs={12}>\n                {this.props.reduxState.viewReceipt.view_list.length > 1 ?\n                    <CardContent>\n                        <h4>Payment Method: {this.props.reduxState.viewReceipt.view_list[0].payment_method}</h4>\n                        <h4>\n                        Due: {this.props.reduxState.viewReceipt.view_list[0].due}</h4>\n                        <h4>\n                        Date: {this.props.reduxState.viewReceipt.view_list[0].date}</h4>\n                        {this.props.reduxState.viewReceipt.view_list.map(receipt => {\n                            return <h4 key={receipt.id}>Service: {receipt.service_type}</h4>;\n                        })}\n                    </CardContent>\n                    :\n                this.props.reduxState.viewReceipt.view_list.length === 1 && (\n                    <CardContent>\n                        <h4>Payment Method: {this.props.reduxState.viewReceipt.view_list[0].payment_method}</h4>\n                        <h4>\n                        Due: {this.props.reduxState.viewReceipt.view_list[0].due}</h4>\n                        <h4>\n                        Date: {this.props.reduxState.viewReceipt.view_list[0].date}</h4>\n                        <h4>Service: {this.props.reduxState.viewReceipt.view_list[0].service_type}</h4>\n                    </CardContent>\n                )\n            }\n            </Grid>\n        );\n        return (\n            <Card className={this.props.classes.cardContainer}>\n                <Grid container spacing={24}>\n                    <Grid item xs={9}>\n                        <CardContent>\n                            <h4>{this.props.receipt.payment_method} {this.props.receipt.date} {this.props.receipt.due}</h4>\n                        </CardContent>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <CardContent>\n                            <Button className={this.props.classes.gridLeftBtn} variant=\"contained\" color={this.props.reduxState.viewReceipt.view_id === this.props.receipt.id ? \"primary\" : \"secondary\"} onClick={this.handleView}>view</Button>\n                            <Button className={this.props.classes.gridLeftBtn} variant=\"contained\" color=\"secondary\" onClick={() => this.handleDelete(this.props.receipt.id)}>delete</Button>\n                        </CardContent>\n                    </Grid>\n                    {viewThisReceipt}\n                </Grid>\n            </Card>\n        )\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nexport default connect(mapStateToProps)(withStyles(Styles)(Receipt));\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport Styles from '../../../../Styles/Styles';\nimport Receipt from './Receipts';\n\nclass VehicleReceipts extends React.Component {\n    state = {\n        edit: false\n    }\n    handleEdit = () => {\n        this.props.dispatch({\n            type: 'FETCH_DATA_VEHICLE',\n            payload: this.props.reduxState.viewVehicle.id\n        });\n        this.setState({\n            edit: true\n        });\n    }\n    handleCancel = () => {\n        this.props.dispatch({\n            type: 'FETCH_DATA_VEHICLE',\n            payload: this.props.reduxState.viewVehicle.id\n        });\n        this.setState({\n            edit: false\n        });\n    }\n    handleChange = (propertyName) => (event) => {\n        this.props.dispatch({\n            type: 'EDIT_VEHICLE',\n            payload: { ...this.props.reduxState.viewVehicle, [propertyName]: event.target.value }\n        });\n    }\n    handleSubmit = () => {\n        this.props.dispatch({\n            type: 'UPDATE_VEHICLE',\n            payload: this.props.reduxState.viewVehicle\n        });\n        this.setState({\n            edit: false\n        });\n    }\n    handleDelete = (vehicleId) => {\n        if (window.confirm('Delete Vehicle?')) {\n            this.props.dispatch({\n                type: 'DELETE_VEHICLE',\n                payload: vehicleId\n            });\n            this.props.dispatch({\n                type: 'FETCH_DATA_CUSTOMER',\n                payload: this.props.reduxState.viewVehicle.id\n            });\n        }\n    }\n    handleView = () => {\n        this.props.dispatch({\n            type: 'FETCH_DATA_VEHICLE',\n            payload: this.props.reduxState.viewVehicle.id\n        });\n    }\n    handleAddReceipt = (vehicleId) => {\n        this.props.dispatch({\n            type: 'SET_NEW_RECEIPT',\n            payload: { ...this.props.reduxState.newReceipt, vehicle_id: vehicleId }\n        });\n        this.props.history.push('/manage/receipt/add');\n    }\n    render() {\n        let editMode = this.state.edit ?\n            // in edit\n            <Grid item container spacing={24} className={this.props.classes.componentMaxWidth}>\n                <Grid item container spacing={24} className={this.props.classes.stickLeft}>\n                    <Grid item xs={9}>\n                        <h4>\n                            Make:\n                            <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewVehicle.make} onChange={this.handleChange('make')} />\n                        </h4>\n                        <h4>\n                            Model:\n                            <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewVehicle.model} onChange={this.handleChange('model')} />\n                        </h4>\n                        <h4>\n                            Year:\n                            <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewVehicle.year} onChange={this.handleChange('year')} />\n                        </h4>\n                        <h4>\n                            Plate:\n                            <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewVehicle.plate} onChange={this.handleChange('plate')} />\n                        </h4>\n                        <h4>\n                            Color:\n                            <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewVehicle.color} onChange={this.handleChange('color')} />\n                        </h4>\n                        <h4>\n                            Other:\n                            <input className={this.props.classes.inputMargin} value={this.props.reduxState.viewVehicle.other} onChange={this.handleChange('other')} />\n                        </h4>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.gridLeftBtn} onClick={this.handleSubmit}>Save</Button>\n                        <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.gridLeftBtn} onClick={this.handleCancel}>Cancel</Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n            : // not in edit\n            <Grid item container spacing={24} className={this.props.classes.componentMaxWidth}>\n                <Grid item container spacing={24} className={this.props.classes.stickLeft}>\n                    <Grid item xs={9}>\n                        <h4>\n                            Make: {this.props.reduxState.viewVehicle.make}\n                        </h4>\n                        <h4>\n                            Model: {this.props.reduxState.viewVehicle.model}\n                        </h4>\n                        <h4>\n                            Year: {this.props.reduxState.viewVehicle.year}\n                        </h4>\n                        <h4>\n                            Plate: {this.props.reduxState.viewVehicle.plate}\n                        </h4>\n                        <h4>\n                            Color: {this.props.reduxState.viewVehicle.color}\n                        </h4>\n                        <h4>\n                            Other: {this.props.reduxState.viewVehicle.other}\n                        </h4>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.gridLeftBtn} onClick={this.handleEdit}>Edit</Button>\n                    </Grid>\n                </Grid>\n            </Grid>;\n            let vehicleReceipts = this.props.reduxState.vehicleReceipts.map(receipt => {\n                return <Receipt receipt={receipt} key={receipt.id} />\n            });\n        return this.props.reduxState.viewVehicle.id ?\n            <Grid container spacing={24} className={this.props.classes.componentContainer}>\n                <Grid item xs={12} className={this.props.classes.componentHeader}>\n                    <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.headerButtonLeft} component={Link} to=\"/manage/customer\">Back to Customer</Button>\n                    <h3>View Vehicles</h3>\n                </Grid>\n                {editMode}\n                <Grid item xs={12}>\n                    <Button className={this.props.classes.componentSecondBtn} variant=\"contained\" color=\"secondary\" onClick={() => this.handleAddReceipt(this.props.reduxState.viewVehicle.id)}>Add Receipts</Button>\n                </Grid>\n                <Grid item xs={12}>\n                    {vehicleReceipts}\n                </Grid>\n            </Grid>\n            :\n            <Grid container spacing={24} className={this.props.classes.componentContainer}>\n                <Grid item xs={12} className={this.props.classes.componentHeader}>\n                    <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.headerButtonLeft} component={Link} to=\"/manage\">Back to Manage</Button>\n                    <h3>No vehicle selected</h3>\n                </Grid>\n            </Grid>;\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nexport default connect(mapStateToProps)(withStyles(Styles)(VehicleReceipts));\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core';\nimport Styles from '../../../../../Styles/Styles';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Fab from '@material-ui/core/Fab';\n\nclass ServiceAdd extends React.Component {\n    state = ({\n        service_id: ''\n    })\n    handleChange = (event) => {\n        this.setState ({\n            service_id: event.target.value\n        })\n    }\n    render() {\n        return (\n            <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n                <Grid container spacing={8} alignItems=\"flex-end\">\n                    <Grid item xs={1}>\n                        <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" onClick={this.props.add}>\n                            +\n                        </Fab>\n                    </Grid>\n                    <Grid item xs={11}>\n                        <TextField\n                            select\n                            label=\"Service\"\n                            type=\"text\"\n                            value={this.state.service_id}\n                            className={this.props.classes.boxFormOne}\n                            margin=\"normal\"\n                            variant=\"filled\"\n                            onChange={this.handleChange}\n                        >\n                            {this.props.reduxState.services.map(service => {\n                                return <MenuItem key={service.id} value={service.id}>{service.service_type}</MenuItem>\n                            })}\n                        </TextField>\n                    </Grid>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n});\n\nexport default connect(mapStateToProps)(withStyles(Styles)(ServiceAdd));\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core';\nimport Styles from '../../../../../Styles/Styles';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Fab from '@material-ui/core/Fab';\n\nclass ServiceSubtract extends React.Component {\n  state = ({\n    service_id: ''\n  })\n  handleChange = (event) => {\n    this.setState({\n      service_id: event.target.value\n    })\n  }\n  render() {\n    return (\n      <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item xs={1}>\n            <Fab size=\"small\" color=\"secondary\" aria-label=\"Add\" onClick={this.props.subtract}>\n              -\n                </Fab>\n          </Grid>\n          <Grid item xs={11}>\n            <TextField\n              select\n              label=\"Service\"\n              type=\"text\"\n              value={this.state.service_id}\n              className={this.props.classes.boxFormOne}\n              margin=\"normal\"\n              variant=\"filled\"\n              onChange={this.handleChange}\n            >\n              {this.props.reduxState.services.map(service => {\n                return <MenuItem key={service.id} value={service.id}>{service.service_type}</MenuItem>\n              })}\n            </TextField>\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nexport default connect(mapStateToProps)(withStyles(Styles)(ServiceSubtract));\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n// import '../ManagePage.css';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core';\nimport Styles from '../../../../../Styles/Styles';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Fab from '@material-ui/core/Fab';\nimport ServiceAdd from './ServiceAdd';\nimport ServiceSubtract from './ServiceSubtract';\n\n\n\nclass AddReceipt extends React.Component {\n  state = ({\n    numberService: -5 || 1\n  })\n  componentDidMount = () => {\n    this.props.dispatch({ type: 'FETCH_SERVICES' });\n  }\n  handleSubmit = () => {\n    if (this.props.reduxState.newVehicle.make !== '' && this.props.reduxState.newVehicle.year !== '' && this.props.reduxState.newVehicle.model !== '') { // validate input\n      if (window.confirm(`Add ${this.props.reduxState.newVehicle.make} ${this.props.reduxState.newVehicle.model} to ${this.props.reduxState.viewCustomer.first_name}`)) {\n        this.props.dispatch({\n          type: 'ADD_VEHICLE',\n          payload: this.props.reduxState.newVehicle\n        }); // add some type of confirmation or notification that customer is added\n        alert(`Vehicle added to ${this.props.reduxState.viewCustomer.first_name}`);\n        this.props.history.push('/manage/customer');\n      }\n    } else {\n      alert('not a valid vehicle');\n    }\n  }\n  handleChange = (propertyName) => (event) => {\n    if (propertyName === 'year') { // change to year format\n      this.props.dispatch({\n        type: 'SET_NEW_VEHICLE',\n        payload: { ...this.props.reduxState.newVehicle, [propertyName]: `1-1-${event.target.value}` }\n      })\n    } else {\n      this.props.dispatch({\n        type: 'SET_NEW_VEHICLE',\n        payload: { ...this.props.reduxState.newVehicle, [propertyName]: event.target.value }\n      })\n    }\n  }\n  handleAddService = () => {\n    this.setState({\n      numberService: this.state.numberService + 1\n    })\n  }\n  handleSubtractService = () => {\n    this.setState({\n      numberService: this.state.numberService - 1\n    })\n  }\n  // handleFill remove after demo\n  handleFill = () => {\n    this.props.dispatch({\n      type: 'SET_NEW_VEHICLE',\n      payload: { ...this.props.reduxState.newVehicle,\n        make: 'Ford',\n        model: 'F-150',\n        year: '2011',\n        plate: 'NIJU-RE91',\n        color: 'White',\n        other: 'custom hood paint'\n      }\n    })\n  } // remove after demo\n  render() {\n    let inputService = [];\n    if (this.state.numberService < 1) {\n      this.setState({\n        numberService: 1\n      })\n    }\n    for (let i = 0; i < this.state.numberService; i++) {\n      if (i === 0) {\n        inputService.push(<ServiceAdd key={i} add={this.handleAddService}/>)\n      } else {\n        inputService.push(<ServiceSubtract key={i} subtract={this.handleSubtractService}/>)\n      }\n    }\n    return this.props.reduxState.newReceipt.vehicle_id ?\n      <Grid container spacing={24} className={this.props.classes.componentContainer}>\n        <Grid item xs={12} className={this.props.classes.componentHeader}>\n          <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.headerButtonLeft} component={Link} to=\"/manage/vehicle\">Back to Vehicle</Button>\n          <h3>Add Receipts</h3>\n        </Grid>\n        <Grid item container xs={12} spacing={24} className={this.props.classes.boxFormContainer}>\n          {inputService}\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <TextField\n              label=\"Description\"\n              type=\"text\"\n              className={this.props.classes.boxFormOne}\n              margin=\"normal\"\n              variant=\"filled\"\n              onChange={this.handleChange('year')}\n            />\n          </Grid>\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <TextField\n              label=\"Amount Due\"\n              type=\"text\"\n              className={this.props.classes.boxFormOne}\n              margin=\"normal\"\n              variant=\"filled\"\n              onChange={this.handleChange('color')}\n            />\n          </Grid>\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <TextField\n              label=\"Payment Method\"\n              type=\"text\"\n              className={this.props.classes.boxFormOne}\n              margin=\"normal\"\n              variant=\"filled\"\n              onChange={this.handleChange('other')}\n            />\n          </Grid>\n          <Grid item xs={12} className={this.props.classes.boxFormMaxWidth}>\n            <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.boxFormOne} onClick={this.handleSubmit}>Submit</Button>\n            <button className={this.props.classes.emptyButton} onClick={this.handleFill}>FILL</button>\n            {/* button remove after demo */}\n          </Grid>\n        </Grid>\n      </Grid>\n      :\n      <Grid container spacing={24} className={this.props.classes.componentContainer}>\n        <Grid item xs={12} className={this.props.classes.componentHeader}>\n          <Button variant=\"contained\" color=\"secondary\" className={this.props.classes.headerButtonLeft} component={Link} to=\"/manage\">Back to Manage</Button>\n          <h3>No Vehicle Selected</h3>\n        </Grid>\n      </Grid>\n      ;\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nexport default connect(mapStateToProps)(withStyles(Styles)(AddReceipt));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Styles from '../Styles/Styles';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nclass ServicesPage extends React.Component {\n  componentDidMount = () => {\n    this.props.dispatch({ type: 'FETCH_SERVICES' });\n  }\n  render(){\n  let allService = this.props.reduxState.services.map((service, i) => {\n    if (i % 2 ) {\n    return <div key={service.id} value={service.id}>{service.service_type} even</div>\n    } else {\n      return <div key={service.id} value={service.id}>{service.service_type} odd</div>\n    }\n  })\n    return (\n  <div>\n    <div>\n      <p>\n        {allService}\n      </p>\n    </div>\n  </div>\n    )\n  }\n}\n\nconst mapStateToProps = reduxState => ({\n  reduxState,\n});\n\nexport default connect(mapStateToProps)(withStyles(Styles)(ServicesPage));\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\nimport AboutPage from '../AboutPage/AboutPage';\nimport CarListPage from '../CarList/CarList';\nimport HomePage from '../HomePage/HomePage';\nimport ManagePage from '../ManagePage/ManagePage';\nimport ShopServicesPage from '../ShopService/ShopService';\nimport CarSalesPage from '../CarSales/CarSalesPage';\nimport ManageAddCustomer from '../ManagePage/AddCustomer/AddCustomer';\nimport LoginPage from '../LoginPage/LoginPage';\nimport ManageCustomerPage from '../ManagePage/Customer/Customer';\nimport ManageAddVehicle from '../ManagePage/Customer/CustomerVehicle/AddVehicle/AddVehicle';\nimport ManageVehicle from '../ManagePage/Customer/CustomerVehicle/VehicleReceipts/VehicleReceipts';\nimport ManageAddReceipt from '../ManagePage/Customer/CustomerVehicle/VehicleReceipts/AddReceipts/AddReceipt';\nimport ServicesAll from '../ServicesAll/ServicesAll';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"main-container\">\n          <Header />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/login\" />\n            {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n            {/* <Route\n              exact\n              path=\"/about\"\n              component={AboutPage}\n            /> */}\n            {/* <Route\n              exact\n              path=\"/services\"\n              component={ServicesAll}\n            /> */}\n            {/* <Route\n              exact\n              path=\"/carList\"\n              component={CarListPage}\n            /> */}\n            <Route\n              exact\n              path=\"/login\"\n              component={LoginPage}\n            />\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            {/* <Route\n              exact\n              path=\"/home\"\n              component={HomePage}\n            /> */}\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the info page instead. */}\n            <ProtectedRoute\n              exact\n              path=\"/manage\"\n              component={ManagePage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/manage/customer\"\n              component={ManageCustomerPage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/manage/vehicle\"\n              component={ManageVehicle}\n            />\n            {/* <ProtectedRoute\n              exact\n              path=\"/shopService\"\n              component={ShopServicesPage}\n            /> */}\n            <ProtectedRoute\n              exact\n              path=\"/manage/vehicle/add\"\n              component={ManageAddVehicle}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/manage/receipt/add\"\n              component={ManageAddReceipt}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/manage/add\"\n              component={ManageAddCustomer}\n            />\n            {/* <ProtectedRoute\n              exact\n              path=\"/carSales\"\n              component={CarSalesPage}\n            /> */}\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#455a64',\n    },\n    secondary: {\n      main: '#2196f3',\n    },\n    // contrastThreshold: 3,\n    // tonalOffset: 0.2,\n  },\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}